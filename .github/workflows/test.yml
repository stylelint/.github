name: Test

on:
  workflow_call:
    inputs:
      node-version:
        description: Node.js version
        required: false
        default: '["18", "20", "22"]'
        type: string
      node-version-file:
        description: Node.js version file
        required: false
        default: ''
        type: string
      os:
        description: OS name
        required: false
        default: '["ubuntu-latest"]'
        type: string
      exclude:
        description: Exclude from matrix
        required: false
        default: '[]'
        type: string
      test-options:
        description: Options to pass the test command
        required: false
        default: ''
        type: string

jobs:
  # NOTE: Prevent an empty matrix if `node-version-file` is specified
  prepare:
    runs-on: ubuntu-latest
    outputs:
      node-version: ${{ steps.init-node-version.outputs.node-version }}
    steps:
      - name: Initialize "node-version" parameter
        id: init-node-version
        run: |
          if [[ -n "${node_version_file}" ]]; then
            node_version='["current"]' # dummy
          fi
          echo "node-version=${node_version}" >> "${GITHUB_OUTPUT}"
        env:
          node_version: ${{ inputs.node-version }}
          node_version_file: ${{ inputs.node-version-file }}

  test:
    needs: prepare

    name: Test on Node.js ${{ inputs.node-version-file || matrix.node-version }} and ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        # NOTE: The `strategy` property is not fully supported, so it uses `fromJson()`.
        #       For details, see https://github.community/t/reusable-workflow-with-strategy-matrix/205676/2
        node-version: ${{ fromJson(needs.prepare.outputs.node-version) }}
        os: ${{ fromJson(inputs.os) }}
        exclude: ${{ fromJson(inputs.exclude) }}

    runs-on: ${{ matrix.os }}

    permissions:
      contents: read

    timeout-minutes: 30

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js ${{ matrix.node-version }}
        if: ${{ !inputs.node-version-file }}
        id: setup-node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Set up Node.js from ${{ inputs.node-version-file }} file
        if: ${{ inputs.node-version-file }}
        uses: actions/setup-node@v4
        with:
          node-version-file: ${{ inputs.node-version-file }}
          cache: npm

      # NOTE: npm v10 has dropped support for Node.js v16.
      - name: Install npm v9
        if: ${{ startsWith(steps.setup-node.outputs.node-version, '16') }}
        run: npm install --global npm@9 && npm --version

      - name: Install latest npm
        if: ${{ !startsWith(steps.setup-node.outputs.node-version, '16') }}
        run: npm install --global npm@latest && npm --version

      - name: Install dependencies
        run: npm ci

      - name: Test
        run: npm test --ignore-scripts -- ${{ inputs.test-options }}
